matrix:
  include:
  - os: linux
    language: cpp
    env: TOXENV=py37
    dist: trusty
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-trusty-7
        packages:
        - clang-7
        - clang++-7
  - os: linux
    language: cpp
    env: TOXENV=py27
    dist: trusty
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-trusty-7
        packages:
        - clang-7
        - clang++-7
  - os: osx
    osx_image: xcode10.1
    language: generic
    env: TOXENV=py37
  - os: osx
    osx_image: xcode10.1
    language: generic
    env: TOXENV=py27
before_install:
- if [ $TRAVIS_OS_NAME == "osx" ] && [ $TOXENV == "py27" ]; then brew update; brew
  install python@2; fi
- if [ $TRAVIS_OS_NAME == "osx" ] && [ $TOXENV == "py37" ]; then brew update; brew
  install python; fi
- if [ $TRAVIS_OS_NAME == "linux" ]; then sudo apt-get purge cmake; export CC=clang-7;
  export CXX=clang++-7; if [ $TOXENV == "py37" ]; then sudo apt-get install python3-pip
  python3-dev build-essential; else sudo apt-get install python-pip python-dev build-essential;
  fi fi
install:
- if [ $TOXENV == "py27" ]; then echo "building for python 2 ..."; python2 -m pip
  install --user --upgrade setuptools wheel; python2 -m pip install --user --upgrade
  twine; python2 setup.py bdist_wheel; ls dist; pip2 install --user dist/*.whl; else
  echo "building for python 3 ..."; python3 -m pip install --user --upgrade setuptools
  wheel; python3 -m pip install --user --upgrade twine; python3 setup.py bdist_wheel;
  ls dist; pip3 install --user dist/*.whl; fi
script:
- cd
- if [ $TOXENV == "py27" ]; then echo "testing python 2"; python2 -c 'from kcollections
  import Kset, Kdict'; else echo "testing python 3"; python3 -c 'from kcollections
  import Kset, Kdict'; fi
- cd -
deploy:
  provider: releases
  api_key:
    secure: UExI7BFNq1ghy5HQjqkMRiJ9i2q1GcdyKiMBKDQPXS3E2PeCd5AOeu6EZN63ixLwLsDCq19R0ur+RnXyj4UOZqaKWd8dVKbAC9AkOXw+XoV8z2GlOf44M1rdkKsfYR8F1zJCETgV4F1FaGgOK4XgaGEkWckx0u5XQKeplJyb0H6J0y/i/1cwO+YYCMHFrz0VkhCUgyAcgSemsQVXm3stJ5uqnNeUnqu3Yl0yc6HpCN28c8xAuNyP8oMFfH97OIL2lyGKfHBNcMdGUgiDwcD1EYpxszkZFwhL/dvV+OUrvVIy4Hd6p1n6bBvI30fjZJ+PcdmHCB/ciqdlGL0zUQ+XyFQSJHfepreXW7vFC5s9QO/ThNGu0w7QR5sXUWtGI4GUeYSggruC66TXipaO3WK3Psaukq8v1efimsBSmZp7KLWoxEiqnoECEVcxYTqPCOeD8GBrZJEuf4FwaogybgG0YVJ7BuoC/1IdxqXL6h18nXCpL35k3D0mN/D2sL/xoQF7X1PyR2toYrnOIUDj120TxBrrpGowi9mcP714NiOj1TEZRlMgcg1X0v2rddWLXJ9mBvcRK+4bdiLYAT7JpZXG06CulPcTGon8MZBPNrmTMWq/KgcnSZpJPccfR0VUpJDwVw443Qkucv3s/BMKSZHSWSFbKdfV8T+BSyU5Yf7dlyQ=
  file_glob: true
  file: dist/*.whl
  skip_cleanup: true
  on:
    repo: masakistan/kcollections
    tags: true
    branch: master
